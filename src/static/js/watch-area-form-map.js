var CommunityDiscussions = CommunityDiscussions || {};

(function(CD) {
  CD.initWatchAreaMap = function(options) {
        // Generated by the form
    var $input = $('#id_fence'),
        $container = $('#watch-area-controls'),
        $initAreaBtn = $('#init-watch-area'),
        $resetLink = $('#reset-watch-area'),
        map = new L.Map(options.el, {scrollWheelZoom: false}),
        layer = new L.TileLayer(options.tileUrl, {maxZoom: 17, attribution: options.tileAttribution}),
        pathOptions = {
          color: '#478e23',
          weight: 2,
          opacity: 1,
          fillOpacity: 0.3
        },
        wicket = new Wkt.Wkt(),
        area;

    map.addLayer(layer);

    function setAreaFormElement(polygon) {
      // Continuting to use this because Wicket doesn't implement deconstruct
      // for Leaflet yet.
      $input.val(CD.Utils.toWKT(polygon));
    }

    function setArea(polygon) {
      area = polygon;

      // Init the hidden input element
      setAreaFormElement(area);

      // Turn on editing
      if (options.editable) {
        area.editing.enable();
      }

      // On edit, update the hidden input element
      area.on('edit', function() {
        setAreaFormElement(area);
      });

      // Put it on the map
      area.addTo(map);
    }

    // Reset the the watch area to a rectable that is 25% smaller than the bounds
    function resetWatchArea() {
      // Calc the bounds of the area
      var areaBounds = map.getBounds().pad(-0.25);

      // Show the submit button and the reset link
      $container.addClass('edit');

      // Remove the polygon from the map if it exists
      if (area) {
        map.removeLayer(area);
      }

      // Make a new polygon (I thought it needed a closing point, but no)
      area = L.polygon([
        areaBounds.getSouthWest(),
        areaBounds.getSouthEast(),
        areaBounds.getNorthEast(),
        areaBounds.getNorthWest()
      ], pathOptions);

      setArea(area);
    }

    // When the user clicks the init button
    $initAreaBtn.click(function(evt) {
      evt.preventDefault();
      resetWatchArea();
    });

    $resetLink.click(function(evt) {
      evt.preventDefault();

      // Confirm if an area exists already
      if (area) {
        if (window.confirm(options.resetConfirmationMsg)) {
          resetWatchArea();
        }
      }
    });

    if (options.fenceGeoJson) {
      wicket.read(options.fenceGeoJson);

      area = wicket.toObject(pathOptions).addTo(map);

      map.fitBounds(area.getBounds());

      setArea(area);
    } else {
      map.setView(options.center, 13);
    }
  };
})(CommunityDiscussions);
